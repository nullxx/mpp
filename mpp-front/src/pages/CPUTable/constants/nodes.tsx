import type { Node } from "../../../lib/ReactFlow";

const nodes: Node[] = [
  {
    id: "registers-bank",
    data: {
      labelKey: "registersBank.label",
      width: 400,
      height: 200,
      controlBusBitLoad: {
        label: "REGCAR",
        getFunction: "get_control_bus_regcar",
      },
      controlBusBitRelease: {
        label: "REGBUS",
        getFunction: "get_control_bus_regbus",
      },
    },
    draggable: false,
    position: { x: -371, y: 24 },
    className: "light",
    type: "loadableNode",
    isParent: true,
  },
  {
    id: "rb",
    position: { x: 20, y: 50 },
    parentNode: "registers-bank",
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "rb.label",
      readOnly: true,
      getFunction: "get_register_b",
      helpInfoKey: "rb.helpInfo",
    },
  },
  {
    id: "rc",
    position: { x: 200, y: 50 },
    parentNode: "registers-bank",
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "rc.label",
      readOnly: true,
      getFunction: "get_register_c",
      helpInfoKey: "rc.helpInfo",
    },
  },
  {
    id: "rd",
    position: { x: 20, y: 120 },
    parentNode: "registers-bank",
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "rd.label",
      readOnly: true,
      getFunction: "get_register_d",
      helpInfoKey: "rd.helpInfo",
    },
  },
  {
    id: "re",
    position: { x: 200, y: 120 },
    parentNode: "registers-bank",
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "re.label",
      readOnly: true,
      getFunction: "get_register_e",
      helpInfoKey: "re.helpInfo",
    },
  },

  {
    id: "acum",
    position: { x: -537, y: -227 },
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "acum.label",
      handlePos: ["bottom", "top"],
      handlesCount: 2,
      readOnly: true,
      width: 70,
      height: 63,
      controlBusBitLoad: {
        label: "ACCAR",
        getFunction: "get_control_bus_accar",
      },
      controlBusBitRelease: {
        label: "ACBUS",
        getFunction: "get_control_bus_acbus",
      },
      getFunction: "get_register_acum",
      helpInfoKey: "acum.helpInfo",
    },
  },

  {
    id: "2op",
    position: { x: -337, y: -229 },
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "2op.label",
      handlePos: ["bottom", "top"],
      handlesCount: 2,
      readOnly: true,
      width: 70,
      height: 63,
      controlBusBitLoad: {
        label: "2OPCAR",
        getFunction: "get_control_bus_2opcar",
      },
      getFunction: "get_register_2op",
    },
  },
  {
    id: "pc",
    position: { x: -751, y: -226 },
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "pc.label",
      readOnly: true,
      handlePos: ["bottom"],
      handlesCount: 1,
      width: 70,
      height: 63,
      controlBusBitLoad: {
        label: "PCCAR",
        getFunction: "get_control_bus_pccar",
      },
      // controlBusBitRelease: { label: "???", getFunction: 'get_control_bus_pcbus??' },
      getFunction: "get_register_pc",
      helpInfoKey: "pc.helpInfo",
    },
  },

  {
    id: "sp",
    position: { x: -137, y: -228 },
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "sp.label",
      handlePos: ["bottom"],
      handlesCount: 1,
      readOnly: true,
      width: 70,
      height: 63,
      controlBusBitLoad: {
        label: "SPCAR",
        getFunction: "get_control_bus_spcar",
      },
      getFunction: "get_register_sp",
      helpInfoKey: "sp.helpInfo",
    },
  },
  {
    id: "h",
    position: { x: 66, y: -225 },
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "h.label",
      handlePos: ["bottom"],
      handlesCount: 1,
      readOnly: true,
      width: 70,
      height: 63,
      controlBusBitLoad: { label: "HCAR", getFunction: "get_control_bus_hcar" },
      getFunction: "get_register_h",
    },
  },
  {
    id: "l",
    position: { x: 263, y: -226 },
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "l.label",
      handlePos: ["bottom"],
      handlesCount: 1,
      readOnly: true,
      width: 70,
      height: 63,
      controlBusBitLoad: { label: "LCAR", getFunction: "get_control_bus_lcar" },
      getFunction: "get_register_l",
    },
  },

  {
    id: "8",
    data: {
      labelKey: "controlunit.label",
      width: 400,
      height: 120,
    },
    draggable: false,
    position: { x: -787, y: 62 },
    className: "light",
    type: "loadableNode",
    isParent: true,
  },

  {
    id: "ri",
    position: { x: 20, y: 40 },
    parentNode: "8",
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "ri.label",
      readOnly: true,
      width: 70,
      height: 63,
      handlePos: ["top"],
      handlesCount: 1,
      controlBusBitLoad: {
        label: "RICAR",
        getFunction: "get_control_bus_ricar",
      },
      getFunction: "get_register_ri",
      helpInfoKey: "ri.helpInfo",
    },
  },
  {
    id: "8b",
    position: { x: 200, y: 40 },
    parentNode: "8",
    draggable: false,
    type: "registerNode",
    data: {
      labelKey: "state.label",
      readOnly: true,
      width: 70,
      height: 63,
      getFunction: "get_state",
    },
  },
  {
    id: "memory",
    position: { x: 50, y: 54 },
    type: "memoryNode",
    draggable: false,
    data: {
      labelKey: "memory.label",
      readOnly: false,
      // controlBusBitLoad: { label: "Read (1), Write (0)", getFunction: 'get_control_bus_le' },
      controlBusBitRelease: {
        label: "MEMBUS",
        getFunction: "get_control_bus_membus",
      },
      width: 300,
      helpInfoKey: "memory.helpInfo",
    },
  },
  {
    id: "transition-state",
    position: { x: -1028, y: 141 },
    type: "stateTransition",
    data: {
      labelKey: "transitionstate.label",
    },
    draggable: false,
  },
  {
    id: "debugger",
    position: { x: -1027, y: -229 },
    type: "debuggerNode",
    data: {
      labelKey: "debugger.label",
    },
    draggable: false,
  },
  {
    id: "flags",
    position: { x: -170, y: -378 },
    draggable: false,
    type: "flagsNode",
    data: {
      labelKey: "flags.label",
      helpInfoKey: "flags.helpInfo",
      fzHelpInfoKey: "flags.fzHelpInfo",
      fcHelpInfoKey: "flags.fcHelpInfo",
    },
  },
  {
    id: "clockCycleTime",
    position: { x: -777, y: 207 },
    draggable: false,
    type: "cycleTimeNode",
    data: {
      labelKey: "clockCycleTime.label",
    },
  },
  {
    id: "alu",
    position: { x: -448, y: -383 },
    draggable: false,
    type: "aluNode",
    data: {
      labelKey: "alu.label",
      handlePos: ["bottom"],
      handlesCount: 2,
    },
  },
  {
    id: "databus",
    position: { x: -760, y: -100 },
    draggable: false,
    type: "busNode",
    data: {
      labelKey: "databus.label",
      width: 1200,
      getFunction: "get_data_bus",
    },
  },
];
export default nodes;
