---
import { SITE } from '../config';
export interface Props {
	frontmatter: any;
	site: any;
	canonicalURL: URL | string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { frontmatter = {} } = Astro.props;
const formattedContentTitle = frontmatter.title
	? `${frontmatter.title} ðŸš€ ${SITE.title}`
	: SITE.title;
---

<!-- Page Metadata -->
<link rel="canonical" href={canonicalURL} />

<!-- OpenGraph Tags -->
<meta property="og:title" content={formattedContentTitle} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:locale" content={frontmatter.ogLocale ?? SITE.defaultLanguage} />
<meta
	name="description"
	property="og:description"
	content={frontmatter.description ? frontmatter.description : SITE.description}
/>
<meta property="og:site_name" content={SITE.title} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={formattedContentTitle} />
<meta
	name="twitter:description"
	content={frontmatter.description ? frontmatter.description : SITE.description}
/>

<!--
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense?
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
